"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/../../packages/shared-lib/api/addresses.ts":
/*!**************************************************!*\
  !*** ../../packages/shared-lib/api/addresses.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAddress: function() { return /* binding */ createAddress; },\n/* harmony export */   deleteAddress: function() { return /* binding */ deleteAddress; },\n/* harmony export */   ensureDefaultAddress: function() { return /* binding */ ensureDefaultAddress; },\n/* harmony export */   getAddressById: function() { return /* binding */ getAddressById; },\n/* harmony export */   getAddresses: function() { return /* binding */ getAddresses; },\n/* harmony export */   getDefaultAddress: function() { return /* binding */ getDefaultAddress; },\n/* harmony export */   setDefaultAddress: function() { return /* binding */ setDefaultAddress; },\n/* harmony export */   updateAddress: function() { return /* binding */ updateAddress; }\n/* harmony export */ });\n/* harmony import */ var _repo_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @repo/database */ \"(app-pages-browser)/../../packages/database/index.ts\");\n\n/**\n * Get all addresses for a user\n */ async function getAddresses(userId) {\n    console.log(\"[getAddresses] Fetching addresses for userId:\", userId);\n    const { data, error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").select(\"*\").eq(\"user_id\", userId).is(\"archived_at\", null).order(\"is_default\", {\n        ascending: false\n    }).order(\"created_at\", {\n        ascending: false\n    });\n    if (error) {\n        console.error(\"[getAddresses] Error fetching addresses:\", error);\n        throw new Error(\"Failed to fetch addresses\");\n    }\n    console.log(\"[getAddresses] Found\", (data === null || data === void 0 ? void 0 : data.length) || 0, \"addresses\");\n    return data || [];\n}\n/**\n * Get default address for a user\n */ async function getDefaultAddress(userId) {\n    const { data, error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").select(\"*\").eq(\"user_id\", userId).eq(\"is_default\", true).single();\n    if (error) {\n        if (error.code === \"PGRST116\") {\n            // No default address found\n            return null;\n        }\n        console.error(\"Error fetching default address:\", error);\n        throw new Error(\"Failed to fetch default address\");\n    }\n    return data;\n}\n/**\n * Get a specific address by ID\n */ async function getAddressById(addressId) {\n    const { data, error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").select(\"*\").eq(\"id\", addressId).single();\n    if (error) {\n        console.error(\"Error fetching address:\", error);\n        return null;\n    }\n    return data;\n}\n/**\n * Create a new address\n */ async function createAddress(userId, addressData) {\n    console.log(\"[createAddress] Starting with userId:\", userId);\n    console.log(\"[createAddress] Address data:\", addressData);\n    // If this is set as default, unset other defaults first\n    if (addressData.is_default) {\n        console.log(\"[createAddress] Unsetting other default addresses...\");\n        await unsetDefaultAddresses(userId);\n    }\n    const insertData = {\n        user_id: userId,\n        ...addressData,\n        updated_at: new Date().toISOString()\n    };\n    console.log(\"[createAddress] Inserting data:\", insertData);\n    const { data, error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").insert(insertData).select().single();\n    if (error) {\n        console.error(\"[createAddress] Error creating address:\", error);\n        console.error(\"[createAddress] Error details:\", JSON.stringify(error, null, 2));\n        throw new Error(\"Failed to create address: \".concat(error.message));\n    }\n    console.log(\"[createAddress] Successfully created address:\", data);\n    return data;\n}\n/**\n * Update an existing address\n */ async function updateAddress(addressId, addressData) {\n    // Get the address to find its user_id\n    const existingAddress = await getAddressById(addressId);\n    if (!existingAddress) {\n        throw new Error(\"Address not found\");\n    }\n    // If setting as default, unset other defaults first\n    if (addressData.is_default) {\n        await unsetDefaultAddresses(existingAddress.user_id);\n    }\n    const { data, error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").update({\n        ...addressData,\n        updated_at: new Date().toISOString()\n    }).eq(\"id\", addressId).select().single();\n    if (error) {\n        console.error(\"Error updating address:\", error);\n        throw new Error(\"Failed to update address\");\n    }\n    return data;\n}\n/**\n * Delete an address\n */ async function deleteAddress(addressId) {\n    const { error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").delete().eq(\"id\", addressId);\n    if (error) {\n        console.error(\"Error deleting address:\", error);\n        throw new Error(\"Failed to delete address\");\n    }\n}\n/**\n * Set an address as default (and unset others)\n */ async function setDefaultAddress(userId, addressId) {\n    // First, unset all defaults for this user\n    await unsetDefaultAddresses(userId);\n    // Then set the new default\n    const { error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").update({\n        is_default: true,\n        updated_at: new Date().toISOString()\n    }).eq(\"id\", addressId).eq(\"user_id\", userId);\n    if (error) {\n        console.error(\"Error setting default address:\", error);\n        throw new Error(\"Failed to set default address\");\n    }\n}\n/**\n * Unset all default addresses for a user (internal helper)\n */ async function unsetDefaultAddresses(userId) {\n    const { error } = await _repo_database__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addresses\").update({\n        is_default: false\n    }).eq(\"user_id\", userId).eq(\"is_default\", true);\n    if (error) {\n        console.error(\"Error unsetting default addresses:\", error);\n    // Don't throw here, as this is a helper function\n    }\n}\n/**\n * Ensure user has at least one default address\n * If no default exists, set the first address as default\n */ async function ensureDefaultAddress(userId) {\n    const addresses = await getAddresses(userId);\n    if (addresses.length === 0) {\n        return; // No addresses to set as default\n    }\n    const hasDefault = addresses.some((addr)=>addr.is_default);\n    if (!hasDefault) {\n        // Set the first address as default\n        await setDefaultAddress(userId, addresses[0].id);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../packages/shared-lib/api/addresses.ts\n"));

/***/ })

});